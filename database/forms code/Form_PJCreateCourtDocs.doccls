'@Folder("Database.Production.Forms")
Option Compare Database
Option Explicit

'@Ignore UnderscoreInPublicClassModuleMember
Private Sub cmdStage1Paperwork_Click()
    Call pfStage1Ppwk
End Sub

Private Sub cmdStage2Paperwork_Click()
    Call pfStage2Ppwk
End Sub

Private Sub cmdStage3Paperwork_Click()
    Call pfStage3Ppwk
End Sub

Private Sub cmdStage4Paperwork_Click()
    Call pfStage4Ppwk
End Sub

Private Sub cmdViewPaperworkHistory_Click()
    DoCmd.OpenForm FormName:="PJViewDocHistory"
End Sub

Private Sub Command68_Click()
    '============================================================================
    ' Name        : Command68_Click
    ' Author      : Erica L Ingram
    ' Copyright   : 2019, A Quo Co.
    ' Call command: Call Command68_Click
    ' Description : generates document specified from combo box selection
    '============================================================================

    Dim sAnswer As String
    Dim sQuestion As String
    Dim svURL As String
    
    Dim qdf As QueryDef
    Dim rstTRCUnionAA As DAO.Recordset

    
    Dim cJob As Job
    Set cJob = New Job
    sCourtDatesID = Forms![NewMainMenu]![ProcessJobSubformNMM].Form![JobNumberField]
    cJob.FindFirst "ID=" & sCourtDatesID

    If Me.cmbListAllDocuments = "Stage 1:  Deposit Received paperwork" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating deposit-received document."
    
        Call fDepositPaymentReceived
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    ElseIf Me.cmbListAllDocuments = "Stage 1:  Order Confirmation" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating order-confirmation document."

        Call pfGenericExportandMailMerge("Case", "Stage1s\OrderConfirmation")
        Call pfSendWordDocAsEmail("OrderConfirmation", "Transcript Order Confirmation") 'Order Confrmation Email

    
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    ElseIf Me.cmbListAllDocuments = "Stage 1:  Cover Page" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating transcript cover document."
    
        Call pfSelectCoverTemplate               'Cover Page
        Call pfUpdateCheckboxStatus("CoverPage")

        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    ElseIf Me.cmbListAllDocuments = "Stage 1:  Create Tasks" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating tasks."
    
        Call pfGenerateJobTasks
        Call pfUpdateCheckboxStatus("Schedule")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 1:  CD Label" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating CD label document."

        'Call pfCreateCDLabel
        Call pfUpdateCheckboxStatus("CDLabel")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 1:  package-enclosed letter" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating PEL document."

        'Call fCreatePELLetter
        Call pfUpdateCheckboxStatus("PackageEnclosedLetter")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 1:  transcripts-ready email" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating TRE document."

        Call fTranscriptDeliveryF
        Call pfUpdateCheckboxStatus("TranscriptsReady")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 1:  Price Quote/Deposit Invoice" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating PQ/DI document."

        'export xero csv
        DoCmd.OpenQuery qXeroCSVQ, acViewNormal, acAdd
        DoCmd.TransferText acExportDelim, , qSelectXero, cJob.DocPath.XeroCSV, True
        DoCmd.Close acQuery, qXeroCSVQ
    
        'open xero website
        svURL = "https://go.xero.com/Import/Import.aspx?type=IMPORTTYPE/ARINVOICES"
        Application.FollowHyperlink (svURL)
        Call fIsFactoringApproved
        Call pfUpdateCheckboxStatus("InvoiceCompleted")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
  
    ElseIf Me.cmbListAllDocuments = "Stage 1:  KCI Invoice" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating KCI invoice."
  
        Call fAcrobatKCIInvoice
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    
    ElseIf Me.cmbListAllDocuments = "Stage 2:  Type rough draft" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Processing rough draft."

        Call pfRoughDraftToCoverF
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 3:  Find/replace" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Processing rough draft."

        Call pfTypeRoughDraftF
        Call pfUpdateCheckboxStatus("AddRDtoCover")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 3:  Audio proof" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Beginning audio proofing."

        Application.FollowHyperlink cJob.DocPath.CourtCover
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."

    ElseIf Me.cmbListAllDocuments = "Stage 3:  Volumes Cover" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating volumes compilation cover document."
    
        Call pfCreateCover("Stage3s\TR-AllCover.dotm") 'cover for all volumes in one pdf
        Call pfPrepareCover
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  Shipping XMLs" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating shipping XML document."

        DoCmd.OpenForm FormName:="FShippingOptions"
        Call pfUpdateCheckboxStatus("ShippingXMLs")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  Xero invoice CSV" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating Xero CSV document."

        'export xero csv
        DoCmd.OpenQuery qXeroCSVQ, acViewNormal, acAdd
        'DoCmd.TransferText acExportDelim, , "XeroInvoiceQuery1Select", cJob.DocPath.XeroCSV, True
        DoCmd.TransferText acExportDelim, , qSelectXero, cJob.DocPath.XeroCSV, True
        DoCmd.Close acQuery, qXeroCSVQ
        'open xero website
        svURL = "https://go.xero.com/Import/Import.aspx?type=IMPORTTYPE/ARINVOICES"
        Application.FollowHyperlink (svURL)
        Call pfUpdateCheckboxStatus("InvoiceCompleted")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  PayPal invoice CSV" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating PayPal CSV document."

    
        'real factoring csv plus invoice generated FactoringCSVQuery
        'paypal csv PayPalDepositInvoiceCSVQ & PayPalFactoringInvoiceCSVQ
        
        If cJob.App0.FactoringApproved = True Then
    
            DoCmd.OpenQuery qFCSVQ, acViewNormal, acAdd
            DoCmd.TransferText acExportDelim, , qFCSVQ, cJob.DocPath.PPCSV, True
            DoCmd.Close acQuery, qFCSVQ
            DoCmd.OpenQuery "PayPalFactoringInvoiceCSVQ", acViewNormal, acAdd
            DoCmd.TransferText acExportDelim, , "PayPalFactoringInvoiceCSVQ", cJob.DocPath.PPCSV, True
            DoCmd.Close acQuery, "PayPalFactoringInvoiceCSVQ"
        
        Else
    
            DoCmd.OpenQuery "PayPalDepositInvoiceCSVQ", acViewNormal, acAdd
            DoCmd.TransferText acExportDelim, , "PayPalDepositInvoiceCSVQ", cJob.DocPath.PPCSV, True
            DoCmd.Close acQuery, "PayPalDepositInvoiceCSVQ"
        
        End If
    
        qdf.Close
        rstTRCUnionAA.Close
        Set qdf = Nothing
        Set rstTRCUnionAA = Nothing
    
        svURL = "https://go.xero.com/Import/Import.aspx?type=IMPORTTYPE/ARINVOICES"
        Application.FollowHyperlink (svURL)
        Call pfUpdateCheckboxStatus("InvoiceCompleted")

        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    ElseIf Me.cmbListAllDocuments = "Stage 4:  Factoring invoice CSV" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating factoring CSV document."

        'factor email prompt
        'need to add other real factoring csv plus invoice generated
        sQuestion = "Do you want to factor this invoice?"
        sAnswer = MsgBox(sQuestion, vbQuestion + vbYesNo, "???")
    
        If sAnswer = vbNo Then                   'Code for No
    
            MsgBox "This job will not be sent to factoring."
        
        Else                                     'Code for yes
    
            Call fFactorInvoicEmailF
            Call pfUpdateCheckboxStatus("InvoicetoFactorEmail")
        
            sCourtDatesID = Forms![NewMainMenu]![ProcessJobSubformNMM].Form![JobNumberField]
            
            DoCmd.OpenQuery qXeroCSVQ, acViewNormal, acAdd
            DoCmd.TransferText acExportDelim, , qSelectXero, cJob.DocPath.XeroCSV, True
            DoCmd.Close acQuery, qXeroCSVQ
        
            'TR-Court-Union-AppAddr
            'real factoring csv plus invoice generated FactoringCSVQuery
            'paypal csv PayPalDepositInvoiceCSVQ & PayPalFactoringInvoiceCSVQ
        
            Set qdf = CurrentDb.QueryDefs(qnTRCourtUnionAppAddrQ)
            qdf.Parameters(0) = sCourtDatesID
            Set rstTRCUnionAA = qdf.OpenRecordset()
        
            If cJob.App0.FactoringApproved = True Then
        
                DoCmd.OpenQuery qFCSVQ, acViewNormal, acAdd
                DoCmd.TransferText acExportDelim, , qFCSVQ, cJob.DocPath.PPCSV, True
                DoCmd.Close acQuery, qFCSVQ
                DoCmd.OpenQuery "PayPalFactoringInvoiceCSVQ", acViewNormal, acAdd
                DoCmd.TransferText acExportDelim, , "PayPalFactoringInvoiceCSVQ", cJob.DocPath.PPCSV, True
                DoCmd.Close acQuery, "PayPalFactoringInvoiceCSVQ"
            
            Else
        
                DoCmd.OpenQuery "PayPalDepositInvoiceCSVQ", acViewNormal, acAdd
                DoCmd.TransferText acExportDelim, , "PayPalDepositInvoiceCSVQ", cJob.DocPath.PPCSV, True
                DoCmd.Close acQuery, "PayPalDepositInvoiceCSVQ"
            
            End If
    
            qdf.Close
            rstTRCUnionAA.Close
            Set qdf = Nothing
            Set rstTRCUnionAA = Nothing
                
            svURL = "https://go.xero.com/Import/Import.aspx?type=IMPORTTYPE/ARINVOICES"
            Application.FollowHyperlink (svURL)
            Call pfUpdateCheckboxStatus("InvoiceCompleted")
        
        End If
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  Invoice / Balance Due" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating Invoice/Balance due document."

        Call fSendPPEmailFactored
        Call pfSendWordDocAsEmail("CIDFinalIncomeReport", "Final Income Notification") 'final income report 'emails adam cid report
        
        'export xero csv
        DoCmd.OpenQuery qXeroCSVQ, acViewNormal, acAdd
        
        DoCmd.TransferText acExportDelim, , qSelectXero, cJob.DocPath.XeroCSV, True
        DoCmd.Close acQuery, qXeroCSVQ
    
        'open xero website
        svURL = "https://go.xero.com/Import/Import.aspx?type=IMPORTTYPE/ARINVOICES"
        Application.FollowHyperlink (svURL)
        Call pfUpdateCheckboxStatus("InvoiceCompleted")
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  PayPal Invoice" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating PP invoice document."
    
        Call fIsFactoringApproved
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    
    ElseIf Me.cmbListAllDocuments = "Stage 4:  Word Index" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating word index document."
    
        Call pfWordIndexer
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
        
    ElseIf Me.cmbListAllDocuments = "Stage 4:  PP Draft Email" Then
        Forms![NewMainMenu].Form!lblFlash.Caption = "Generating PP draft email document."
        
        Dim oWordApp As Word.Application
        Dim oWordDoc As Word.Document
        
        Set oWordApp = CreateObject("Word.Application")
        Set oWordDoc = Documents.Open(cJob.DocPath.PPDIET)

        oWordApp.Application.Visible = False
        oWordDoc.MailMerge.OpenDataSource Name:=cJob.DocPath.InvoiceInfo, ReadOnly:=True
        oWordDoc.MailMerge.Execute
        oWordDoc.MailMerge.MainDocumentType = wdNotAMergeDocument
        oWordDoc.Application.ActiveDocument.SaveAs2 FileName:=cJob.DocPath.PPDraftInvoiceEmail
        oWordDoc.Close
        oWordApp.Quit
        
        Set oWordApp = CreateObject("Word.Application")
        oWordApp.Visible = False
    
        Set oWordDoc = oWordApp.Documents.Open(cJob.DocPath.PPButton)
    
        oWordDoc.Content.Copy
    
        Set oWordApp = CreateObject("Word.Application")
        Set oWordDoc = oWordApp.Documents.Open(cJob.DocPath.PPDraftInvoiceEmail)

        With oWordDoc.Application

            .Selection.Find.ClearFormatting
            .Selection.Find.Replacement.ClearFormatting
    
            With .Selection.Find
                .Text = "#PPB1#"
                .Replacement.Text = ""
                .Forward = True
                .Wrap = wdFindContinue
                .Format = False
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
                .Execute
                If .Forward = True Then
                    .Application.Selection.Collapse Direction:=wdCollapseStart
                Else
                    .Application.Selection.Collapse Direction:=wdCollapseEnd
                End If
        
                .Execute Replace:=wdReplaceOne
        
                If .Forward = True Then
                    .Application.Selection.Collapse Direction:=wdCollapseEnd
                Else
                    .Application.Selection.Collapse Direction:=wdCollapseStart
                End If
        
                .Execute
        
                .Application.Selection.PasteAndFormat (wdFormatOriginalFormatting) 'paste button html file
        
            End With
           
            'save invoice
            oWordDoc.Save
    
        End With
        oWordDoc.Close
        oWordApp.Quit
    
        Set oWordApp = Nothing
        Set oWordDoc = Nothing
        
    
    Else
    End If
    Call pfClearGlobals
        Forms![NewMainMenu].Form!lblFlash.Caption = "Ready to process."
    sCourtDatesID = ""
End Sub
